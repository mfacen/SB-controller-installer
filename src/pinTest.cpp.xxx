
#include "../../SharpBox/include/header.h"


#define DEVICE_NAME "relayBoard"     //  Aqui es importante define el nombre para los updates es el mismo para los dispositivos del mismo tipo
#define SOFT_VERSION "1.22"        //   Changed file system to LittleFS   
String mdnsName = DEVICE_NAME;     // 
const char *OTAName = DEVICE_NAME; // A name and a password for the OTA service

Page page("Relay Board", "Control interface.");
Updater updater( DEVICE_NAME , SOFT_VERSION );
TimeLabel lblTime("lblTime", "");

LabelFreeHeap lblFreeHeap("lblHeap", "this");
//Chart chart("canvasGraphic");
Logger logger("Logger" , "/dataLog.csv", 60, &wifiClient  );
DigitalOutput testPin ( 13 , "testPin" , false);
Set testSet ("testSet","tst", &testPin);
//Binder bmbPanel (&switchBomba,&RelayBomba);
//GenericInputPanel salinidad ("Salinidad","ppt",&ECprobe);
Label lblVersion("lblVersion","Device: "+String(DEVICE_NAME)+" - Ver: "+String(SOFT_VERSION));
DirCapture dirCapture("dCapt","/capturas/");
RS485Main serialCom(&page);

#include "../../SharpBox/include/footer.h"

//Button btnWifi("switchToStation","WiFi");
//Graphic graphic("tempGraph");
///////////////////////////////////////////////////////////////////////////
////                                                               ////////
///////              SETUP                                          ////////
////                                                               ////////
///////////////////////////////////////////////////////////////////////////

void setup()
{
    startUpWifi();
    Serial2.begin(115200, SERIAL_8N1 , 16,17 );
    pinMode(4,OUTPUT);
    digitalWrite(4,LOW);
    savedVariable::init();
    page.addElement(&lblTime);
    page.addString("</div><p>"
                    "<a href=/settings>Preferencias</a>"
    "</p>");
    //page.addString("<br>");
    


    page.addElement(&testSet);
    page.addString("</div>");
    page.addElement(&logger);

    page.addString("<br>");
    page.addElement(&dirCapture);
    page.addElement(&lblFreeHeap);
    page.addElement(&lblVersion);
    //page.addElement(&btnWifi);

    page.setDebug(true); // 


            Serial.println("page.getHTML()");

        page.getHtml();   // Generate the index.html File
            Serial.println("Generated index.html");
    //webSocket.begin();
        updater.checkUpdate();

    //webSocket.onEvent(webSocketEvent);
}

///////////////////////////////////////////////////////////////////////////
////                                                               ////////
///////              LOOP                                          ////////
////                                                               ////////
///////////////////////////////////////////////////////////////////////////
unsigned long lastCheck;
void loop()
{
    static bool state;
    generalLoop();
    if ( millis()-lastCheck > 4000 ){
        lastCheck=millis();
          (state=!state) ;
           Serial.println("State: "+String(state));
          testSet.update(state);
    }
}

